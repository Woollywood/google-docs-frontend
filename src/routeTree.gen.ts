/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthenticatedImport } from './routes/_unauthenticated'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as ProtectedIndexImport } from './routes/_protected/index'
import { Route as ProtectedProfileImport } from './routes/_protected/profile'
import { Route as UnauthenticatedAuthLayoutImport } from './routes/_unauthenticated/auth/_layout'
import { Route as ProtectedDocumentsIdIndexImport } from './routes/_protected/documents/$id/index'
import { Route as UnauthenticatedAuthLayoutSignUpImport } from './routes/_unauthenticated/auth/_layout/sign-up'
import { Route as UnauthenticatedAuthLayoutSignInImport } from './routes/_unauthenticated/auth/_layout/sign-in'
import { Route as UnauthenticatedAuthLayoutResetPasswordImport } from './routes/_unauthenticated/auth/_layout/reset-password'
import { Route as UnauthenticatedAuthLayoutForgotPasswordImport } from './routes/_unauthenticated/auth/_layout/forgot-password'
import { Route as UnauthenticatedAuthLayoutEmailVerifiedImport } from './routes/_unauthenticated/auth/_layout/email-verified'
import { Route as UnauthenticatedAuthLayoutEmailVerificationImport } from './routes/_unauthenticated/auth/_layout/email-verification'

// Create Virtual Routes

const UnauthenticatedAuthImport = createFileRoute('/_unauthenticated/auth')()

// Create/Update Routes

const UnauthenticatedRoute = UnauthenticatedImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedAuthRoute = UnauthenticatedAuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => UnauthenticatedRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedProfileRoute = ProtectedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProtectedRoute,
} as any)

const UnauthenticatedAuthLayoutRoute = UnauthenticatedAuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => UnauthenticatedAuthRoute,
} as any)

const ProtectedDocumentsIdIndexRoute = ProtectedDocumentsIdIndexImport.update({
  id: '/documents/$id/',
  path: '/documents/$id/',
  getParentRoute: () => ProtectedRoute,
} as any)

const UnauthenticatedAuthLayoutSignUpRoute =
  UnauthenticatedAuthLayoutSignUpImport.update({
    id: '/sign-up',
    path: '/sign-up',
    getParentRoute: () => UnauthenticatedAuthLayoutRoute,
  } as any)

const UnauthenticatedAuthLayoutSignInRoute =
  UnauthenticatedAuthLayoutSignInImport.update({
    id: '/sign-in',
    path: '/sign-in',
    getParentRoute: () => UnauthenticatedAuthLayoutRoute,
  } as any)

const UnauthenticatedAuthLayoutResetPasswordRoute =
  UnauthenticatedAuthLayoutResetPasswordImport.update({
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => UnauthenticatedAuthLayoutRoute,
  } as any)

const UnauthenticatedAuthLayoutForgotPasswordRoute =
  UnauthenticatedAuthLayoutForgotPasswordImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => UnauthenticatedAuthLayoutRoute,
  } as any)

const UnauthenticatedAuthLayoutEmailVerifiedRoute =
  UnauthenticatedAuthLayoutEmailVerifiedImport.update({
    id: '/email-verified',
    path: '/email-verified',
    getParentRoute: () => UnauthenticatedAuthLayoutRoute,
  } as any)

const UnauthenticatedAuthLayoutEmailVerificationRoute =
  UnauthenticatedAuthLayoutEmailVerificationImport.update({
    id: '/email-verification',
    path: '/email-verification',
    getParentRoute: () => UnauthenticatedAuthLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_protected/profile': {
      id: '/_protected/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_unauthenticated/auth': {
      id: '/_unauthenticated/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof UnauthenticatedAuthImport
      parentRoute: typeof UnauthenticatedImport
    }
    '/_unauthenticated/auth/_layout': {
      id: '/_unauthenticated/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof UnauthenticatedAuthLayoutImport
      parentRoute: typeof UnauthenticatedAuthRoute
    }
    '/_unauthenticated/auth/_layout/email-verification': {
      id: '/_unauthenticated/auth/_layout/email-verification'
      path: '/email-verification'
      fullPath: '/auth/email-verification'
      preLoaderRoute: typeof UnauthenticatedAuthLayoutEmailVerificationImport
      parentRoute: typeof UnauthenticatedAuthLayoutImport
    }
    '/_unauthenticated/auth/_layout/email-verified': {
      id: '/_unauthenticated/auth/_layout/email-verified'
      path: '/email-verified'
      fullPath: '/auth/email-verified'
      preLoaderRoute: typeof UnauthenticatedAuthLayoutEmailVerifiedImport
      parentRoute: typeof UnauthenticatedAuthLayoutImport
    }
    '/_unauthenticated/auth/_layout/forgot-password': {
      id: '/_unauthenticated/auth/_layout/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof UnauthenticatedAuthLayoutForgotPasswordImport
      parentRoute: typeof UnauthenticatedAuthLayoutImport
    }
    '/_unauthenticated/auth/_layout/reset-password': {
      id: '/_unauthenticated/auth/_layout/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof UnauthenticatedAuthLayoutResetPasswordImport
      parentRoute: typeof UnauthenticatedAuthLayoutImport
    }
    '/_unauthenticated/auth/_layout/sign-in': {
      id: '/_unauthenticated/auth/_layout/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof UnauthenticatedAuthLayoutSignInImport
      parentRoute: typeof UnauthenticatedAuthLayoutImport
    }
    '/_unauthenticated/auth/_layout/sign-up': {
      id: '/_unauthenticated/auth/_layout/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof UnauthenticatedAuthLayoutSignUpImport
      parentRoute: typeof UnauthenticatedAuthLayoutImport
    }
    '/_protected/documents/$id/': {
      id: '/_protected/documents/$id/'
      path: '/documents/$id'
      fullPath: '/documents/$id'
      preLoaderRoute: typeof ProtectedDocumentsIdIndexImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedProfileRoute: typeof ProtectedProfileRoute
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedDocumentsIdIndexRoute: typeof ProtectedDocumentsIdIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedProfileRoute: ProtectedProfileRoute,
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedDocumentsIdIndexRoute: ProtectedDocumentsIdIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

interface UnauthenticatedAuthLayoutRouteChildren {
  UnauthenticatedAuthLayoutEmailVerificationRoute: typeof UnauthenticatedAuthLayoutEmailVerificationRoute
  UnauthenticatedAuthLayoutEmailVerifiedRoute: typeof UnauthenticatedAuthLayoutEmailVerifiedRoute
  UnauthenticatedAuthLayoutForgotPasswordRoute: typeof UnauthenticatedAuthLayoutForgotPasswordRoute
  UnauthenticatedAuthLayoutResetPasswordRoute: typeof UnauthenticatedAuthLayoutResetPasswordRoute
  UnauthenticatedAuthLayoutSignInRoute: typeof UnauthenticatedAuthLayoutSignInRoute
  UnauthenticatedAuthLayoutSignUpRoute: typeof UnauthenticatedAuthLayoutSignUpRoute
}

const UnauthenticatedAuthLayoutRouteChildren: UnauthenticatedAuthLayoutRouteChildren =
  {
    UnauthenticatedAuthLayoutEmailVerificationRoute:
      UnauthenticatedAuthLayoutEmailVerificationRoute,
    UnauthenticatedAuthLayoutEmailVerifiedRoute:
      UnauthenticatedAuthLayoutEmailVerifiedRoute,
    UnauthenticatedAuthLayoutForgotPasswordRoute:
      UnauthenticatedAuthLayoutForgotPasswordRoute,
    UnauthenticatedAuthLayoutResetPasswordRoute:
      UnauthenticatedAuthLayoutResetPasswordRoute,
    UnauthenticatedAuthLayoutSignInRoute: UnauthenticatedAuthLayoutSignInRoute,
    UnauthenticatedAuthLayoutSignUpRoute: UnauthenticatedAuthLayoutSignUpRoute,
  }

const UnauthenticatedAuthLayoutRouteWithChildren =
  UnauthenticatedAuthLayoutRoute._addFileChildren(
    UnauthenticatedAuthLayoutRouteChildren,
  )

interface UnauthenticatedAuthRouteChildren {
  UnauthenticatedAuthLayoutRoute: typeof UnauthenticatedAuthLayoutRouteWithChildren
}

const UnauthenticatedAuthRouteChildren: UnauthenticatedAuthRouteChildren = {
  UnauthenticatedAuthLayoutRoute: UnauthenticatedAuthLayoutRouteWithChildren,
}

const UnauthenticatedAuthRouteWithChildren =
  UnauthenticatedAuthRoute._addFileChildren(UnauthenticatedAuthRouteChildren)

interface UnauthenticatedRouteChildren {
  UnauthenticatedAuthRoute: typeof UnauthenticatedAuthRouteWithChildren
}

const UnauthenticatedRouteChildren: UnauthenticatedRouteChildren = {
  UnauthenticatedAuthRoute: UnauthenticatedAuthRouteWithChildren,
}

const UnauthenticatedRouteWithChildren = UnauthenticatedRoute._addFileChildren(
  UnauthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof UnauthenticatedRouteWithChildren
  '/profile': typeof ProtectedProfileRoute
  '/': typeof ProtectedIndexRoute
  '/auth': typeof UnauthenticatedAuthLayoutRouteWithChildren
  '/auth/email-verification': typeof UnauthenticatedAuthLayoutEmailVerificationRoute
  '/auth/email-verified': typeof UnauthenticatedAuthLayoutEmailVerifiedRoute
  '/auth/forgot-password': typeof UnauthenticatedAuthLayoutForgotPasswordRoute
  '/auth/reset-password': typeof UnauthenticatedAuthLayoutResetPasswordRoute
  '/auth/sign-in': typeof UnauthenticatedAuthLayoutSignInRoute
  '/auth/sign-up': typeof UnauthenticatedAuthLayoutSignUpRoute
  '/documents/$id': typeof ProtectedDocumentsIdIndexRoute
}

export interface FileRoutesByTo {
  '': typeof UnauthenticatedRouteWithChildren
  '/profile': typeof ProtectedProfileRoute
  '/': typeof ProtectedIndexRoute
  '/auth': typeof UnauthenticatedAuthLayoutRouteWithChildren
  '/auth/email-verification': typeof UnauthenticatedAuthLayoutEmailVerificationRoute
  '/auth/email-verified': typeof UnauthenticatedAuthLayoutEmailVerifiedRoute
  '/auth/forgot-password': typeof UnauthenticatedAuthLayoutForgotPasswordRoute
  '/auth/reset-password': typeof UnauthenticatedAuthLayoutResetPasswordRoute
  '/auth/sign-in': typeof UnauthenticatedAuthLayoutSignInRoute
  '/auth/sign-up': typeof UnauthenticatedAuthLayoutSignUpRoute
  '/documents/$id': typeof ProtectedDocumentsIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteWithChildren
  '/_protected/profile': typeof ProtectedProfileRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/_unauthenticated/auth': typeof UnauthenticatedAuthRouteWithChildren
  '/_unauthenticated/auth/_layout': typeof UnauthenticatedAuthLayoutRouteWithChildren
  '/_unauthenticated/auth/_layout/email-verification': typeof UnauthenticatedAuthLayoutEmailVerificationRoute
  '/_unauthenticated/auth/_layout/email-verified': typeof UnauthenticatedAuthLayoutEmailVerifiedRoute
  '/_unauthenticated/auth/_layout/forgot-password': typeof UnauthenticatedAuthLayoutForgotPasswordRoute
  '/_unauthenticated/auth/_layout/reset-password': typeof UnauthenticatedAuthLayoutResetPasswordRoute
  '/_unauthenticated/auth/_layout/sign-in': typeof UnauthenticatedAuthLayoutSignInRoute
  '/_unauthenticated/auth/_layout/sign-up': typeof UnauthenticatedAuthLayoutSignUpRoute
  '/_protected/documents/$id/': typeof ProtectedDocumentsIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/profile'
    | '/'
    | '/auth'
    | '/auth/email-verification'
    | '/auth/email-verified'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/documents/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/profile'
    | '/'
    | '/auth'
    | '/auth/email-verification'
    | '/auth/email-verified'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/documents/$id'
  id:
    | '__root__'
    | '/_protected'
    | '/_unauthenticated'
    | '/_protected/profile'
    | '/_protected/'
    | '/_unauthenticated/auth'
    | '/_unauthenticated/auth/_layout'
    | '/_unauthenticated/auth/_layout/email-verification'
    | '/_unauthenticated/auth/_layout/email-verified'
    | '/_unauthenticated/auth/_layout/forgot-password'
    | '/_unauthenticated/auth/_layout/reset-password'
    | '/_unauthenticated/auth/_layout/sign-in'
    | '/_unauthenticated/auth/_layout/sign-up'
    | '/_protected/documents/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  UnauthenticatedRoute: typeof UnauthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  UnauthenticatedRoute: UnauthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/_unauthenticated"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/profile",
        "/_protected/",
        "/_protected/documents/$id/"
      ]
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated.tsx",
      "children": [
        "/_unauthenticated/auth"
      ]
    },
    "/_protected/profile": {
      "filePath": "_protected/profile.tsx",
      "parent": "/_protected"
    },
    "/_protected/": {
      "filePath": "_protected/index.tsx",
      "parent": "/_protected"
    },
    "/_unauthenticated/auth": {
      "filePath": "_unauthenticated/auth",
      "parent": "/_unauthenticated",
      "children": [
        "/_unauthenticated/auth/_layout"
      ]
    },
    "/_unauthenticated/auth/_layout": {
      "filePath": "_unauthenticated/auth/_layout.tsx",
      "parent": "/_unauthenticated/auth",
      "children": [
        "/_unauthenticated/auth/_layout/email-verification",
        "/_unauthenticated/auth/_layout/email-verified",
        "/_unauthenticated/auth/_layout/forgot-password",
        "/_unauthenticated/auth/_layout/reset-password",
        "/_unauthenticated/auth/_layout/sign-in",
        "/_unauthenticated/auth/_layout/sign-up"
      ]
    },
    "/_unauthenticated/auth/_layout/email-verification": {
      "filePath": "_unauthenticated/auth/_layout/email-verification.tsx",
      "parent": "/_unauthenticated/auth/_layout"
    },
    "/_unauthenticated/auth/_layout/email-verified": {
      "filePath": "_unauthenticated/auth/_layout/email-verified.tsx",
      "parent": "/_unauthenticated/auth/_layout"
    },
    "/_unauthenticated/auth/_layout/forgot-password": {
      "filePath": "_unauthenticated/auth/_layout/forgot-password.tsx",
      "parent": "/_unauthenticated/auth/_layout"
    },
    "/_unauthenticated/auth/_layout/reset-password": {
      "filePath": "_unauthenticated/auth/_layout/reset-password.tsx",
      "parent": "/_unauthenticated/auth/_layout"
    },
    "/_unauthenticated/auth/_layout/sign-in": {
      "filePath": "_unauthenticated/auth/_layout/sign-in.tsx",
      "parent": "/_unauthenticated/auth/_layout"
    },
    "/_unauthenticated/auth/_layout/sign-up": {
      "filePath": "_unauthenticated/auth/_layout/sign-up.tsx",
      "parent": "/_unauthenticated/auth/_layout"
    },
    "/_protected/documents/$id/": {
      "filePath": "_protected/documents/$id/index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
